import os
import json
import pandas as pd


def read_json_as_dict(jsonFile:str) ->dict:
    with open(jsonFile) as jsonFile:
        jsonObject = json.load(jsonFile)
        jsonFile.close()
    return jsonObject

class nnUNetSumReader:
    def __init__(self, jsonFile:str):
        self.json_file = jsonFile
        #self.json_dict
        
    @property
    def json_file(self):
        return self._json_file

    @json_file.setter
    def json_file(self, jsonFile):
        assert os.path.exists(jsonFile), f"File {jsonFile} does not exits "
        self._json_file = jsonFile
        self.json_dict = read_json_as_dict(self.json_file)
        ## here I check that the json is generated by nnUnet evaluate folder. Weak, would need a real checker
        assert 'results' in self.json_dict.keys()
        results_dct = self.json_dict['results']['all']
        self.results = []
        for evaluation in results_dct:
            ref_tst = {'ref':evaluation['reference'], 'tst':evaluation['test']}
            evaluation_labels = evaluation.copy()
            [evaluation_labels.pop(k) for k in ['reference', 'test']]
            for label, metrics in evaluation_labels.items():
                ref_tst['label'] = label
                print({m:val for m,val in metrics.items()})
                self.results.append({**ref_tst,**{m:val for m,val in metrics.items()}})
                
    def get_data_frame(self)->pd.DataFrame:
        return pd.DataFrame(self.results)
                
    def get_csv(self, csv_path):
        self.get_data_frame().to_csv(csv_path)
        
                
            

        
    def __str__(self):
        return f"{self.json_file}( Results:{len(self.results)})"
    



if __name__ == "__main__":
    jsonFile = '/data/Projects/nnUNet_test_data/nnUNet_raw_data/Task801_MP2/labelsTsPredictions/summary.json'
    print(len(read_json_as_dict(jsonFile)['results']['all']))
    print(read_json_as_dict(jsonFile)['results']['all'][0].keys())
    print()
    print(nnUNetSumReader(jsonFile))
    nnUNetSumReader(jsonFile).get_csv('/tmp/test.csv')